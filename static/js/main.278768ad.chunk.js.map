{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","visibleGoods","goods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","this","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,IAAMQ,EAlEH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOC,GAsBzB,OApBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQb,GACN,KAAKL,EAASS,SACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKlB,EAASW,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAIThB,GACFU,EAAaF,UAIfS,QAAQC,IAAIjB,EAAUD,GAEfU,EAwCgBS,CAAkBtB,EAAiBuB,KAAKrB,OAC7D,EAAiCqB,KAAKrB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWpB,IAAaL,EAASS,SAC7B,iBACA,0BACJkB,QAASH,KAAKjB,eALhB,iCAUA,wBACEmB,KAAK,SACLD,UAAWpB,IAAaL,EAASW,OAC7B,oBACA,6BACJgB,QAASH,KAAKd,aALhB,4BAUA,wBACEgB,KAAK,SACLD,UAAWrB,EACP,oBACA,6BACJuB,QAASH,KAAKZ,QALhB,sBAUEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEsB,KAAK,SACLD,UAAWpB,IAAaL,EAASM,KAC7B,mBACA,4BACJqB,QAASH,KAAKX,MALhB,sBAYJ,6BACE,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBApFvB,GAAyBC,aC3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.278768ad.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-primary'\n              : 'button is-success is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className={sortType === SortType.NONE\n                ? 'button is-danger'\n                : 'button is-danger is-light'}\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}